using FluentAssertions;
using Xunit;

namespace Masterly.Hash.UnitTests;

public class HashTests
{
    [Fact]
    public void ComputeHash_AutoGeneratedSalt_ShouldReturn_HashedString()
    {
        // Arrange
        var hash = new Hash();
        string plainText = "SomePaswword!@#";
        SupportedHash supportedHash = SupportedHash.SHA512;

        // Act
        var hashValue = hash.ComputeHash(
            plainText,
            supportedHash);

        // Assert
        hash.Verify(plainText, hashValue, SupportedHash.SHA512).Should().BeTrue();
    }

    [Fact]
    public void ComputeHash_WithGivenSalt_ShouldReturn_HashedString()
    {
        // Arrange
        var hash = new Hash();
        string plainText = "SomePaswword!@#";
        SupportedHash supportedHash = SupportedHash.SHA512;
        string salt = "SomeSalt!@#";

        // Act
        var hashValue = hash.ComputeHash(
            plainText,
            salt,
            supportedHash
            );

        // Assert
        hash.Verify(plainText, hashValue, SupportedHash.SHA512).Should().BeTrue();
    }
}